/*******************************************************************************
 *  Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 *  The contents of this file are subject to the Mozilla Public License
 *  Version 1.1 (the "License"); you may not use this file except in
 *  compliance with the License. You may obtain a copy of the License at
 *  http://www.mozilla.org/MPL/
 *
 *  Software distributed under the License is distributed on an "AS IS"
 *  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 *  License for the specific language governing rights and limitations
 *  under the License.
 *
 *  The Original Code is ICMA
 *
 *  The Initial Developer of the Original Code is University of Auckland,
 *  Auckland, New Zealand.
 *  Copyright (C) 2011-2014 by the University of Auckland.
 *  All Rights Reserved.
 *
 *  Contributor(s): Jagir R. Hussan
 *
 *  Alternatively, the contents of this file may be used under the terms of
 *  either the GNU General Public License Version 2 or later (the "GPL"), or
 *  the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 *  in which case the provisions of the GPL or the LGPL are applicable instead
 *  of those above. If you wish to allow use of your version of this file only
 *  under the terms of either the GPL or the LGPL, and not to allow others to
 *  use your version of this file under the terms of the MPL, indicate your
 *  decision by deleting the provisions above and replace them with the notice
 *  and other provisions required by the GPL or the LGPL. If you do not delete
 *  the provisions above, a recipient may use your version of this file under
 *  the terms of any one of the MPL, the GPL or the LGPL.
 *
 *
 *******************************************************************************/
package nz.ac.auckland.abi.speckletofem.wsclient;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2013-05-13T10:49:49.056+12:00
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "SpeckleToFEMModelServiceService", 
                  wsdlLocation = "http://localhost:8080/SpeckleFittingWS/SpeckleToFEMModelService?wsdl",
                  targetNamespace = "www.abi.auckland.ac.nz/CCF") 
public class SpeckleToFEMModelServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("www.abi.auckland.ac.nz/CCF", "SpeckleToFEMModelServiceService");
    public final static QName SpeckleToFEMModelServicePort = new QName("www.abi.auckland.ac.nz/CCF", "SpeckleToFEMModelServicePort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/SpeckleFittingWS/SpeckleToFEMModelService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SpeckleToFEMModelServiceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/SpeckleFittingWS/SpeckleToFEMModelService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SpeckleToFEMModelServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SpeckleToFEMModelServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SpeckleToFEMModelServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SpeckleToFEMModelServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SpeckleToFEMModelServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public SpeckleToFEMModelServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns SpeckleToFEMModelService
     */
    @WebEndpoint(name = "SpeckleToFEMModelServicePort")
    public SpeckleToFEMModelService getSpeckleToFEMModelServicePort() {
        return super.getPort(SpeckleToFEMModelServicePort, SpeckleToFEMModelService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SpeckleToFEMModelService
     */
    @WebEndpoint(name = "SpeckleToFEMModelServicePort")
    public SpeckleToFEMModelService getSpeckleToFEMModelServicePort(WebServiceFeature... features) {
        return super.getPort(SpeckleToFEMModelServicePort, SpeckleToFEMModelService.class, features);
    }

}
